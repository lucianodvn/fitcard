--------------------------------------
--FITCARD_CATEGORIA--
--------------------------------------

--CREATE--
IF NOT EXISTS (SELECT 1 FROM SYSOBJECTS WHERE NAME ='FITCARD_CATEGORIA')
BEGIN
CREATE TABLE FITCARD_CATEGORIA(
	ID_CATEGORIA INT PRIMARY KEY IDENTITY(1,1),
	CATEGORIA VARCHAR(50)
	
)
END


--SELECT--
IF EXISTS (SELECT 1 FROM SYSOBJECTS WHERE NAME ='P_SEL_FITCARD_CATEGORIA')
	DROP PROC P_SEL_FITCARD_CATEGORIA
GO
CREATE PROC P_SEL_FITCARD_CATEGORIA
(
	@ID_CATEGORIA INT
)
AS
BEGIN
	SET NOCOUNT ON
	SELECT
	FITCARD_CATEGORIA.ID_CATEGORIA,
	FITCARD_CATEGORIA.CATEGORIA
	FROM FITCARD_CATEGORIA (NOLOCK)
	WHERE
	(FITCARD_CATEGORIA.ID_CATEGORIA = @ID_CATEGORIA OR @ID_CATEGORIA = 0)
	SET NOCOUNT OFF
END
GO


--SELECT_CAMPO--
IF EXISTS (SELECT 1 FROM SYSOBJECTS WHERE NAME ='P_SEL_CAMPO_FITCARD_CATEGORIA')
	DROP PROC P_SEL_CAMPO_FITCARD_CATEGORIA
GO
CREATE PROC P_SEL_CAMPO_FITCARD_CATEGORIA
(
	@ID_CATEGORIA INT,
	@CATEGORIA_TIPO INT ,
	@CATEGORIA VARCHAR(50),
	@__ORDEM INT,
	@__TIPO INT,
	@__SKIP INT,
	@__TAKE INT
)
AS
BEGIN
	SET NOCOUNT ON
	IF (@__TAKE = 0)
		SET @__TAKE = (SELECT COUNT(*) FROM FITCARD_CATEGORIA)
	IF (@__TIPO = -1)
	BEGIN
		SET @__TIPO = 1
		SET @__ORDEM = -1
	END

	DECLARE @ORDERBY VARCHAR(255);
	SET @ORDERBY = CONVERT(VARCHAR,@__ORDEM);
	WITH OrderedOrders AS
		(
		SELECT 
			FITCARD_CATEGORIA.ID_CATEGORIA, 	FITCARD_CATEGORIA.CATEGORIA,  ROW_NUMBER() OVER		(
ORDER BY
Case @__TIPO
	WHEN 0 THEN
	CASE @ORDERBY
		WHEN '-1' THEN CONVERT(VARCHAR(255),NEWID())
		WHEN '0' THEN DBO.F_FITCARD_ZEROS(FITCARD_CATEGORIA.ID_CATEGORIA)
		WHEN '1' THEN FITCARD_CATEGORIA.CATEGORIA

	END
	END
	DESC,
	Case @__TIPO
	WHEN 1 THEN
	CASE @ORDERBY
			WHEN '-1' THEN CONVERT(VARCHAR(255),NEWID())
		WHEN '0' THEN DBO.F_FITCARD_ZEROS(FITCARD_CATEGORIA.ID_CATEGORIA)
		WHEN '1' THEN FITCARD_CATEGORIA.CATEGORIA

	END
END
ASC

		) AS 'RowNumber'

	FROM FITCARD_CATEGORIA (NOLOCK)
		WHERE
		(FITCARD_CATEGORIA.ID_CATEGORIA = @ID_CATEGORIA OR @ID_CATEGORIA IS NULL OR (@ID_CATEGORIA=-1 AND FITCARD_CATEGORIA.ID_CATEGORIA is null))
		AND
		((@CATEGORIA IS NOT NULL AND FITCARD_CATEGORIA.CATEGORIA LIKE DBO.F_FITCARD_BUILD_LIKE(@CATEGORIA_TIPO,@CATEGORIA))  OR @CATEGORIA IS NULL)
		)
	SELECT * FROM OrderedOrders WHERE
	RowNumber BETWEEN (@__SKIP + 1) AND (@__SKIP + @__TAKE)
	SET NOCOUNT OFF
END
GO


--SELECT_CAMPO_RANGE--
IF EXISTS (SELECT 1 FROM SYSOBJECTS WHERE NAME ='P_SEL_CAMPO_RELATORIO_RANGE_FITCARD_CATEGORIA')
	DROP PROC P_SEL_CAMPO_RELATORIO_RANGE_FITCARD_CATEGORIA
GO
CREATE PROC P_SEL_CAMPO_RELATORIO_RANGE_FITCARD_CATEGORIA
(
	@ID_CATEGORIA INT,
	@ID_CATEGORIA_ATE INT,
	@CATEGORIA_TIPO INT ,
	@CATEGORIA VARCHAR(50),
	@__ORDEM INT,
	@__TIPO INT,
	@__SKIP INT,
	@__TAKE INT
)
AS
BEGIN
	SET NOCOUNT ON
	IF (@__TAKE = 0)
		SET @__TAKE = (SELECT COUNT(*) FROM FITCARD_CATEGORIA)
	IF (@__TIPO = -1)
	BEGIN
		SET @__TIPO = 1
		SET @__ORDEM = -1
	END

	DECLARE @ORDERBY VARCHAR(255);
	SET @ORDERBY = CONVERT(VARCHAR,@__ORDEM);
	WITH OrderedOrders AS
		(
		SELECT 
			FITCARD_CATEGORIA.ID_CATEGORIA, 	FITCARD_CATEGORIA.CATEGORIA,  ROW_NUMBER() OVER		(
ORDER BY
Case @__TIPO
	WHEN 0 THEN
	CASE @ORDERBY
		WHEN '-1' THEN CONVERT(VARCHAR(255),NEWID())
		WHEN '0' THEN DBO.F_FITCARD_ZEROS(FITCARD_CATEGORIA.ID_CATEGORIA)
		WHEN '1' THEN FITCARD_CATEGORIA.CATEGORIA

	END
	END
	DESC,
	Case @__TIPO
	WHEN 1 THEN
	CASE @ORDERBY
			WHEN '-1' THEN CONVERT(VARCHAR(255),NEWID())
		WHEN '0' THEN DBO.F_FITCARD_ZEROS(FITCARD_CATEGORIA.ID_CATEGORIA)
		WHEN '1' THEN FITCARD_CATEGORIA.CATEGORIA

	END
END
ASC

		) AS 'RowNumber'

	FROM FITCARD_CATEGORIA (NOLOCK)
		WHERE
		(FITCARD_CATEGORIA.ID_CATEGORIA >= @ID_CATEGORIA OR @ID_CATEGORIA IS NULL OR (@ID_CATEGORIA=-1 AND FITCARD_CATEGORIA.ID_CATEGORIA is null))
		AND
		(FITCARD_CATEGORIA.ID_CATEGORIA <= @ID_CATEGORIA_ATE OR @ID_CATEGORIA_ATE IS NULL OR (@ID_CATEGORIA_ATE=-1 AND FITCARD_CATEGORIA.ID_CATEGORIA is null))
		AND
		((@CATEGORIA IS NOT NULL AND FITCARD_CATEGORIA.CATEGORIA LIKE DBO.F_FITCARD_BUILD_LIKE(@CATEGORIA_TIPO,@CATEGORIA))  OR @CATEGORIA IS NULL)
		)
	SELECT * FROM OrderedOrders WHERE
	RowNumber BETWEEN (@__SKIP + 1) AND (@__SKIP + @__TAKE)
	SET NOCOUNT OFF
END
GO


--SELECT_CAMPO COUNT--
IF EXISTS (SELECT 1 FROM SYSOBJECTS WHERE NAME ='P_SEL_CAMPO_COUNT_FITCARD_CATEGORIA')
	DROP PROC P_SEL_CAMPO_COUNT_FITCARD_CATEGORIA
GO
CREATE PROC P_SEL_CAMPO_COUNT_FITCARD_CATEGORIA
(
	@ID_CATEGORIA INT,	@CATEGORIA_TIPO INT ,	@CATEGORIA VARCHAR(50)
)
AS
BEGIN
	SET NOCOUNT ON
		SELECT COUNT(*) 

	FROM FITCARD_CATEGORIA (NOLOCK)
		WHERE
		(FITCARD_CATEGORIA.ID_CATEGORIA = @ID_CATEGORIA OR @ID_CATEGORIA IS NULL)
		AND
		((@CATEGORIA IS NOT NULL AND FITCARD_CATEGORIA.CATEGORIA LIKE DBO.F_FITCARD_BUILD_LIKE(@CATEGORIA_TIPO,@CATEGORIA))  OR @CATEGORIA IS NULL)
	SET NOCOUNT OFF
END
GO


--INSERT--
IF EXISTS (SELECT 1 FROM SYSOBJECTS WHERE NAME ='P_INS_FITCARD_CATEGORIA')
	DROP PROC P_INS_FITCARD_CATEGORIA
GO
CREATE PROC P_INS_FITCARD_CATEGORIA
(
	@CATEGORIA VARCHAR(50)
)
AS
BEGIN
	SET NOCOUNT ON

	INSERT INTO FITCARD_CATEGORIA
	(
		CATEGORIA
	)
	VALUES
	(
		@CATEGORIA
	)
SELECT Convert(int,MAX(ID_CATEGORIA)) FROM FITCARD_CATEGORIA
	SET NOCOUNT OFF
END
GO


--UPDATE--
IF EXISTS (SELECT 1 FROM SYSOBJECTS WHERE NAME ='P_UPD_FITCARD_CATEGORIA')
	DROP PROC P_UPD_FITCARD_CATEGORIA
GO
CREATE PROC P_UPD_FITCARD_CATEGORIA
(
	@ID_CATEGORIA INT,
	@CATEGORIA VARCHAR(50)
)
AS
BEGIN
	SET NOCOUNT ON
	UPDATE FITCARD_CATEGORIA
	SET
		CATEGORIA = @CATEGORIA
	WHERE
		ID_CATEGORIA = @ID_CATEGORIA
	SET NOCOUNT OFF
END
GO


--DELETE--
IF EXISTS (SELECT 1 FROM SYSOBJECTS WHERE NAME ='P_DEL_FITCARD_CATEGORIA')
	DROP PROC P_DEL_FITCARD_CATEGORIA
GO
CREATE PROC P_DEL_FITCARD_CATEGORIA
(
	@ID_CATEGORIA INT
)
AS
BEGIN
	SET NOCOUNT ON
	DELETE FROM FITCARD_CATEGORIA
	WHERE
	ID_CATEGORIA = @ID_CATEGORIA
	SET NOCOUNT OFF
END
GO


--BUSCA--
IF EXISTS (SELECT 1 FROM SYSOBJECTS WHERE NAME ='P_BUSCA_FITCARD_CATEGORIA')
	DROP PROC P_BUSCA_FITCARD_CATEGORIA
GO
CREATE PROC P_BUSCA_FITCARD_CATEGORIA
(
	@__BUSCA VARCHAR(255),
	@__TIPO INT
)
AS
BEGIN
	DECLARE @START VARCHAR(1)
	DECLARE @END VARCHAR(1)
	SET @START = '%'
	SET @END = '%'

	IF @__TIPO = 0 
		BEGIN
			SET @START = ''
			SET @END = '%'
		END
	IF @__TIPO = 1 
		BEGIN
			SET @START = '%'
			SET @END = '%'
		END
	IF @__TIPO = 2
		BEGIN
			SET @START = '%'
			SET @END = ''
		END
	SET NOCOUNT ON
	SELECT *
	FROM FITCARD_CATEGORIA (NOLOCK)
	WHERE
	CATEGORIA LIKE @START + @__BUSCA + @END
	SET NOCOUNT OFF
END
GO


--COUNT--
IF EXISTS (SELECT 1 FROM SYSOBJECTS WHERE NAME ='P_COUNT_FITCARD_CATEGORIA')
	DROP PROC P_COUNT_FITCARD_CATEGORIA
GO
CREATE PROC P_COUNT_FITCARD_CATEGORIA
AS
BEGIN
	SET NOCOUNT ON
	SELECT
COUNT(*)
	FROM FITCARD_CATEGORIA (NOLOCK)
	SET NOCOUNT OFF
END
GO
--------------------------------------
-------PROXIMO ARQUIVO-------
--------------------------------------
--FITCARD_ESTABELECIMENTO--
--------------------------------------

--CREATE--
IF NOT EXISTS (SELECT 1 FROM SYSOBJECTS WHERE NAME ='FITCARD_ESTABELECIMENTO')
BEGIN
CREATE TABLE FITCARD_ESTABELECIMENTO(
	ID_ESTABELECIMENTO INT PRIMARY KEY IDENTITY(1,1),
	RAZAO_SOCIAL VARCHAR(255),
	NOME_FANTASIA VARCHAR(255),
	CNPJ VARCHAR(30),
	EMAIL VARCHAR(50),
	ENDERECO VARCHAR(255),
	CIDADE VARCHAR(50),
	ESTADO VARCHAR(50),
	TELEFONE VARCHAR(20),
	DATA_CADASTRADO DATETIME,
	ID_CATEGORIA INT,
	ID_STATUS INT,
	AGENCIA VARCHAR(10),
	CONTA VARCHAR(5)
	
)
END


--SELECT--
IF EXISTS (SELECT 1 FROM SYSOBJECTS WHERE NAME ='P_SEL_FITCARD_ESTABELECIMENTO')
	DROP PROC P_SEL_FITCARD_ESTABELECIMENTO
GO
CREATE PROC P_SEL_FITCARD_ESTABELECIMENTO
(
	@ID_ESTABELECIMENTO INT
)
AS
BEGIN
	SET NOCOUNT ON
	SELECT
	FITCARD_ESTABELECIMENTO.ID_ESTABELECIMENTO,
	FITCARD_ESTABELECIMENTO.RAZAO_SOCIAL,	FITCARD_ESTABELECIMENTO.NOME_FANTASIA,	FITCARD_ESTABELECIMENTO.CNPJ,	FITCARD_ESTABELECIMENTO.EMAIL,	FITCARD_ESTABELECIMENTO.ENDERECO,	FITCARD_ESTABELECIMENTO.CIDADE,	FITCARD_ESTABELECIMENTO.ESTADO,	FITCARD_ESTABELECIMENTO.TELEFONE,	FITCARD_ESTABELECIMENTO.DATA_CADASTRADO,	FITCARD_ESTABELECIMENTO.ID_CATEGORIA,	FITCARD_ESTABELECIMENTO.ID_STATUS,	FITCARD_ESTABELECIMENTO.AGENCIA,	FITCARD_ESTABELECIMENTO.CONTA
	FROM FITCARD_ESTABELECIMENTO (NOLOCK)
	WHERE
	(FITCARD_ESTABELECIMENTO.ID_ESTABELECIMENTO = @ID_ESTABELECIMENTO OR @ID_ESTABELECIMENTO = 0)
	SET NOCOUNT OFF
END
GO


--SELECT_CAMPO--
IF EXISTS (SELECT 1 FROM SYSOBJECTS WHERE NAME ='P_SEL_CAMPO_FITCARD_ESTABELECIMENTO')
	DROP PROC P_SEL_CAMPO_FITCARD_ESTABELECIMENTO
GO
CREATE PROC P_SEL_CAMPO_FITCARD_ESTABELECIMENTO
(
	@ID_ESTABELECIMENTO INT,
	@RAZAO_SOCIAL_TIPO INT ,
	@RAZAO_SOCIAL VARCHAR(255),
	@NOME_FANTASIA_TIPO INT ,
	@NOME_FANTASIA VARCHAR(255),
	@CNPJ_TIPO INT ,
	@CNPJ VARCHAR(30),
	@EMAIL_TIPO INT ,
	@EMAIL VARCHAR(50),
	@ENDERECO_TIPO INT ,
	@ENDERECO VARCHAR(255),
	@CIDADE_TIPO INT ,
	@CIDADE VARCHAR(50),
	@ESTADO_TIPO INT ,
	@ESTADO VARCHAR(50),
	@TELEFONE_TIPO INT ,
	@TELEFONE VARCHAR(20),
	@DATA_CADASTRADO DATETIME,
	@ID_CATEGORIA INT,
	@ID_STATUS INT,
	@AGENCIA_TIPO INT ,
	@AGENCIA VARCHAR(10),
	@CONTA_TIPO INT ,
	@CONTA VARCHAR(5),
	@__ORDEM INT,
	@__TIPO INT,
	@__SKIP INT,
	@__TAKE INT
)
AS
BEGIN
	SET NOCOUNT ON
	IF (@__TAKE = 0)
		SET @__TAKE = (SELECT COUNT(*) FROM FITCARD_ESTABELECIMENTO)
	IF (@__TIPO = -1)
	BEGIN
		SET @__TIPO = 1
		SET @__ORDEM = -1
	END

	DECLARE @ORDERBY VARCHAR(255);
	SET @ORDERBY = CONVERT(VARCHAR,@__ORDEM);
	WITH OrderedOrders AS
		(
		SELECT 
			FITCARD_ESTABELECIMENTO.ID_ESTABELECIMENTO, 	FITCARD_ESTABELECIMENTO.RAZAO_SOCIAL, 	FITCARD_ESTABELECIMENTO.NOME_FANTASIA, 	FITCARD_ESTABELECIMENTO.CNPJ, 	FITCARD_ESTABELECIMENTO.EMAIL, 	FITCARD_ESTABELECIMENTO.ENDERECO, 	FITCARD_ESTABELECIMENTO.CIDADE, 	FITCARD_ESTABELECIMENTO.ESTADO, 	FITCARD_ESTABELECIMENTO.TELEFONE, 	FITCARD_ESTABELECIMENTO.DATA_CADASTRADO, 	FITCARD_ESTABELECIMENTO.ID_CATEGORIA, 	FITCARD_ESTABELECIMENTO.ID_STATUS, 	FITCARD_ESTABELECIMENTO.AGENCIA, 	FITCARD_ESTABELECIMENTO.CONTA,  ROW_NUMBER() OVER		(
ORDER BY
Case @__TIPO
	WHEN 0 THEN
	CASE @ORDERBY
		WHEN '-1' THEN CONVERT(VARCHAR(255),NEWID())
		WHEN '0' THEN DBO.F_FITCARD_ZEROS(FITCARD_ESTABELECIMENTO.ID_ESTABELECIMENTO)
		WHEN '1' THEN FITCARD_ESTABELECIMENTO.RAZAO_SOCIAL
		WHEN '2' THEN FITCARD_ESTABELECIMENTO.NOME_FANTASIA
		WHEN '3' THEN FITCARD_ESTABELECIMENTO.CNPJ
		WHEN '4' THEN FITCARD_ESTABELECIMENTO.EMAIL
		WHEN '5' THEN FITCARD_ESTABELECIMENTO.ENDERECO
		WHEN '6' THEN FITCARD_ESTABELECIMENTO.CIDADE
		WHEN '7' THEN FITCARD_ESTABELECIMENTO.ESTADO
		WHEN '8' THEN FITCARD_ESTABELECIMENTO.TELEFONE
		WHEN '9' THEN CONVERT(VARCHAR(255),FITCARD_ESTABELECIMENTO.DATA_CADASTRADO,20)
		WHEN '10' THEN DBO.F_FITCARD_ZEROS(FITCARD_ESTABELECIMENTO.ID_CATEGORIA)
		WHEN '11' THEN DBO.F_FITCARD_ZEROS(FITCARD_ESTABELECIMENTO.ID_STATUS)
		WHEN '12' THEN FITCARD_ESTABELECIMENTO.AGENCIA
		WHEN '13' THEN FITCARD_ESTABELECIMENTO.CONTA

	END
	END
	DESC,
	Case @__TIPO
	WHEN 1 THEN
	CASE @ORDERBY
			WHEN '-1' THEN CONVERT(VARCHAR(255),NEWID())
		WHEN '0' THEN DBO.F_FITCARD_ZEROS(FITCARD_ESTABELECIMENTO.ID_ESTABELECIMENTO)
		WHEN '1' THEN FITCARD_ESTABELECIMENTO.RAZAO_SOCIAL
		WHEN '2' THEN FITCARD_ESTABELECIMENTO.NOME_FANTASIA
		WHEN '3' THEN FITCARD_ESTABELECIMENTO.CNPJ
		WHEN '4' THEN FITCARD_ESTABELECIMENTO.EMAIL
		WHEN '5' THEN FITCARD_ESTABELECIMENTO.ENDERECO
		WHEN '6' THEN FITCARD_ESTABELECIMENTO.CIDADE
		WHEN '7' THEN FITCARD_ESTABELECIMENTO.ESTADO
		WHEN '8' THEN FITCARD_ESTABELECIMENTO.TELEFONE
		WHEN '9' THEN CONVERT(VARCHAR(255),FITCARD_ESTABELECIMENTO.DATA_CADASTRADO,20)
		WHEN '10' THEN DBO.F_FITCARD_ZEROS(FITCARD_ESTABELECIMENTO.ID_CATEGORIA)
		WHEN '11' THEN DBO.F_FITCARD_ZEROS(FITCARD_ESTABELECIMENTO.ID_STATUS)
		WHEN '12' THEN FITCARD_ESTABELECIMENTO.AGENCIA
		WHEN '13' THEN FITCARD_ESTABELECIMENTO.CONTA

	END
END
ASC

		) AS 'RowNumber'

	FROM FITCARD_ESTABELECIMENTO (NOLOCK)
		WHERE
		(FITCARD_ESTABELECIMENTO.ID_ESTABELECIMENTO = @ID_ESTABELECIMENTO OR @ID_ESTABELECIMENTO IS NULL OR (@ID_ESTABELECIMENTO=-1 AND FITCARD_ESTABELECIMENTO.ID_ESTABELECIMENTO is null))
		AND
		((@RAZAO_SOCIAL IS NOT NULL AND FITCARD_ESTABELECIMENTO.RAZAO_SOCIAL LIKE DBO.F_FITCARD_BUILD_LIKE(@RAZAO_SOCIAL_TIPO,@RAZAO_SOCIAL))  OR @RAZAO_SOCIAL IS NULL)
		AND
		((@NOME_FANTASIA IS NOT NULL AND FITCARD_ESTABELECIMENTO.NOME_FANTASIA LIKE DBO.F_FITCARD_BUILD_LIKE(@NOME_FANTASIA_TIPO,@NOME_FANTASIA))  OR @NOME_FANTASIA IS NULL)
		AND
		((@CNPJ IS NOT NULL AND FITCARD_ESTABELECIMENTO.CNPJ LIKE DBO.F_FITCARD_BUILD_LIKE(@CNPJ_TIPO,@CNPJ))  OR @CNPJ IS NULL)
		AND
		((@EMAIL IS NOT NULL AND FITCARD_ESTABELECIMENTO.EMAIL LIKE DBO.F_FITCARD_BUILD_LIKE(@EMAIL_TIPO,@EMAIL))  OR @EMAIL IS NULL)
		AND
		((@ENDERECO IS NOT NULL AND FITCARD_ESTABELECIMENTO.ENDERECO LIKE DBO.F_FITCARD_BUILD_LIKE(@ENDERECO_TIPO,@ENDERECO))  OR @ENDERECO IS NULL)
		AND
		((@CIDADE IS NOT NULL AND FITCARD_ESTABELECIMENTO.CIDADE LIKE DBO.F_FITCARD_BUILD_LIKE(@CIDADE_TIPO,@CIDADE))  OR @CIDADE IS NULL)
		AND
		((@ESTADO IS NOT NULL AND FITCARD_ESTABELECIMENTO.ESTADO LIKE DBO.F_FITCARD_BUILD_LIKE(@ESTADO_TIPO,@ESTADO))  OR @ESTADO IS NULL)
		AND
		((@TELEFONE IS NOT NULL AND FITCARD_ESTABELECIMENTO.TELEFONE LIKE DBO.F_FITCARD_BUILD_LIKE(@TELEFONE_TIPO,@TELEFONE))  OR @TELEFONE IS NULL)
		AND
		-- Caso queira o select apenas por data (sem considerar hora)
		 (CAST(FLOOR(CAST(DATA_CADASTRADO AS FLOAT)) AS DATETIME) = @DATA_CADASTRADO OR @DATA_CADASTRADO IS NULL)
		-- Caso queira o select por data e hora, descomente a linha abaixo
		-- (FITCARD_ESTABELECIMENTO.DATA_CADASTRADO = @DATA_CADASTRADO OR @DATA_CADASTRADO IS NULL)
		AND
		(FITCARD_ESTABELECIMENTO.ID_CATEGORIA = @ID_CATEGORIA OR @ID_CATEGORIA IS NULL OR (@ID_CATEGORIA=-1 AND FITCARD_ESTABELECIMENTO.ID_CATEGORIA is null))
		AND
		(FITCARD_ESTABELECIMENTO.ID_STATUS = @ID_STATUS OR @ID_STATUS IS NULL OR (@ID_STATUS=-1 AND FITCARD_ESTABELECIMENTO.ID_STATUS is null))
		AND
		((@AGENCIA IS NOT NULL AND FITCARD_ESTABELECIMENTO.AGENCIA LIKE DBO.F_FITCARD_BUILD_LIKE(@AGENCIA_TIPO,@AGENCIA))  OR @AGENCIA IS NULL)
		AND
		((@CONTA IS NOT NULL AND FITCARD_ESTABELECIMENTO.CONTA LIKE DBO.F_FITCARD_BUILD_LIKE(@CONTA_TIPO,@CONTA))  OR @CONTA IS NULL)
		)
	SELECT * FROM OrderedOrders WHERE
	RowNumber BETWEEN (@__SKIP + 1) AND (@__SKIP + @__TAKE)
	SET NOCOUNT OFF
END
GO


--SELECT_CAMPO_RANGE--
IF EXISTS (SELECT 1 FROM SYSOBJECTS WHERE NAME ='P_SEL_CAMPO_RELATORIO_RANGE_FITCARD_ESTABELECIMENTO')
	DROP PROC P_SEL_CAMPO_RELATORIO_RANGE_FITCARD_ESTABELECIMENTO
GO
CREATE PROC P_SEL_CAMPO_RELATORIO_RANGE_FITCARD_ESTABELECIMENTO
(
	@ID_ESTABELECIMENTO INT,
	@ID_ESTABELECIMENTO_ATE INT,
	@RAZAO_SOCIAL_TIPO INT ,
	@RAZAO_SOCIAL VARCHAR(255),
	@NOME_FANTASIA_TIPO INT ,
	@NOME_FANTASIA VARCHAR(255),
	@CNPJ_TIPO INT ,
	@CNPJ VARCHAR(30),
	@EMAIL_TIPO INT ,
	@EMAIL VARCHAR(50),
	@ENDERECO_TIPO INT ,
	@ENDERECO VARCHAR(255),
	@CIDADE_TIPO INT ,
	@CIDADE VARCHAR(50),
	@ESTADO_TIPO INT ,
	@ESTADO VARCHAR(50),
	@TELEFONE_TIPO INT ,
	@TELEFONE VARCHAR(20),
	@DATA_CADASTRADO DATETIME,
	@DATA_CADASTRADO_ATE DATETIME,
	@ID_CATEGORIA INT,
	@ID_STATUS INT,
	@AGENCIA_TIPO INT ,
	@AGENCIA VARCHAR(10),
	@CONTA_TIPO INT ,
	@CONTA VARCHAR(5),
	@__ORDEM INT,
	@__TIPO INT,
	@__SKIP INT,
	@__TAKE INT
)
AS
BEGIN
	SET NOCOUNT ON
	IF (@__TAKE = 0)
		SET @__TAKE = (SELECT COUNT(*) FROM FITCARD_ESTABELECIMENTO)
	IF (@__TIPO = -1)
	BEGIN
		SET @__TIPO = 1
		SET @__ORDEM = -1
	END

	DECLARE @ORDERBY VARCHAR(255);
	SET @ORDERBY = CONVERT(VARCHAR,@__ORDEM);
	WITH OrderedOrders AS
		(
		SELECT 
			FITCARD_ESTABELECIMENTO.ID_ESTABELECIMENTO, 	FITCARD_ESTABELECIMENTO.RAZAO_SOCIAL, 	FITCARD_ESTABELECIMENTO.NOME_FANTASIA, 	FITCARD_ESTABELECIMENTO.CNPJ, 	FITCARD_ESTABELECIMENTO.EMAIL, 	FITCARD_ESTABELECIMENTO.ENDERECO, 	FITCARD_ESTABELECIMENTO.CIDADE, 	FITCARD_ESTABELECIMENTO.ESTADO, 	FITCARD_ESTABELECIMENTO.TELEFONE, 	FITCARD_ESTABELECIMENTO.DATA_CADASTRADO, 	FITCARD_ESTABELECIMENTO.ID_CATEGORIA, 	FITCARD_ESTABELECIMENTO.ID_STATUS, 	FITCARD_ESTABELECIMENTO.AGENCIA, 	FITCARD_ESTABELECIMENTO.CONTA,  ROW_NUMBER() OVER		(
ORDER BY
Case @__TIPO
	WHEN 0 THEN
	CASE @ORDERBY
		WHEN '-1' THEN CONVERT(VARCHAR(255),NEWID())
		WHEN '0' THEN DBO.F_FITCARD_ZEROS(FITCARD_ESTABELECIMENTO.ID_ESTABELECIMENTO)
		WHEN '1' THEN FITCARD_ESTABELECIMENTO.RAZAO_SOCIAL
		WHEN '2' THEN FITCARD_ESTABELECIMENTO.NOME_FANTASIA
		WHEN '3' THEN FITCARD_ESTABELECIMENTO.CNPJ
		WHEN '4' THEN FITCARD_ESTABELECIMENTO.EMAIL
		WHEN '5' THEN FITCARD_ESTABELECIMENTO.ENDERECO
		WHEN '6' THEN FITCARD_ESTABELECIMENTO.CIDADE
		WHEN '7' THEN FITCARD_ESTABELECIMENTO.ESTADO
		WHEN '8' THEN FITCARD_ESTABELECIMENTO.TELEFONE
		WHEN '9' THEN CONVERT(VARCHAR(255),FITCARD_ESTABELECIMENTO.DATA_CADASTRADO,20)
		WHEN '10' THEN DBO.F_FITCARD_ZEROS(FITCARD_ESTABELECIMENTO.ID_CATEGORIA)
		WHEN '11' THEN DBO.F_FITCARD_ZEROS(FITCARD_ESTABELECIMENTO.ID_STATUS)
		WHEN '12' THEN FITCARD_ESTABELECIMENTO.AGENCIA
		WHEN '13' THEN FITCARD_ESTABELECIMENTO.CONTA

	END
	END
	DESC,
	Case @__TIPO
	WHEN 1 THEN
	CASE @ORDERBY
			WHEN '-1' THEN CONVERT(VARCHAR(255),NEWID())
		WHEN '0' THEN DBO.F_FITCARD_ZEROS(FITCARD_ESTABELECIMENTO.ID_ESTABELECIMENTO)
		WHEN '1' THEN FITCARD_ESTABELECIMENTO.RAZAO_SOCIAL
		WHEN '2' THEN FITCARD_ESTABELECIMENTO.NOME_FANTASIA
		WHEN '3' THEN FITCARD_ESTABELECIMENTO.CNPJ
		WHEN '4' THEN FITCARD_ESTABELECIMENTO.EMAIL
		WHEN '5' THEN FITCARD_ESTABELECIMENTO.ENDERECO
		WHEN '6' THEN FITCARD_ESTABELECIMENTO.CIDADE
		WHEN '7' THEN FITCARD_ESTABELECIMENTO.ESTADO
		WHEN '8' THEN FITCARD_ESTABELECIMENTO.TELEFONE
		WHEN '9' THEN CONVERT(VARCHAR(255),FITCARD_ESTABELECIMENTO.DATA_CADASTRADO,20)
		WHEN '10' THEN DBO.F_FITCARD_ZEROS(FITCARD_ESTABELECIMENTO.ID_CATEGORIA)
		WHEN '11' THEN DBO.F_FITCARD_ZEROS(FITCARD_ESTABELECIMENTO.ID_STATUS)
		WHEN '12' THEN FITCARD_ESTABELECIMENTO.AGENCIA
		WHEN '13' THEN FITCARD_ESTABELECIMENTO.CONTA

	END
END
ASC

		) AS 'RowNumber'

	FROM FITCARD_ESTABELECIMENTO (NOLOCK)
		WHERE
		(FITCARD_ESTABELECIMENTO.ID_ESTABELECIMENTO >= @ID_ESTABELECIMENTO OR @ID_ESTABELECIMENTO IS NULL OR (@ID_ESTABELECIMENTO=-1 AND FITCARD_ESTABELECIMENTO.ID_ESTABELECIMENTO is null))
		AND
		(FITCARD_ESTABELECIMENTO.ID_ESTABELECIMENTO <= @ID_ESTABELECIMENTO_ATE OR @ID_ESTABELECIMENTO_ATE IS NULL OR (@ID_ESTABELECIMENTO_ATE=-1 AND FITCARD_ESTABELECIMENTO.ID_ESTABELECIMENTO is null))
		AND
		((@RAZAO_SOCIAL IS NOT NULL AND FITCARD_ESTABELECIMENTO.RAZAO_SOCIAL LIKE DBO.F_FITCARD_BUILD_LIKE(@RAZAO_SOCIAL_TIPO,@RAZAO_SOCIAL))  OR @RAZAO_SOCIAL IS NULL)
		AND
		((@NOME_FANTASIA IS NOT NULL AND FITCARD_ESTABELECIMENTO.NOME_FANTASIA LIKE DBO.F_FITCARD_BUILD_LIKE(@NOME_FANTASIA_TIPO,@NOME_FANTASIA))  OR @NOME_FANTASIA IS NULL)
		AND
		((@CNPJ IS NOT NULL AND FITCARD_ESTABELECIMENTO.CNPJ LIKE DBO.F_FITCARD_BUILD_LIKE(@CNPJ_TIPO,@CNPJ))  OR @CNPJ IS NULL)
		AND
		((@EMAIL IS NOT NULL AND FITCARD_ESTABELECIMENTO.EMAIL LIKE DBO.F_FITCARD_BUILD_LIKE(@EMAIL_TIPO,@EMAIL))  OR @EMAIL IS NULL)
		AND
		((@ENDERECO IS NOT NULL AND FITCARD_ESTABELECIMENTO.ENDERECO LIKE DBO.F_FITCARD_BUILD_LIKE(@ENDERECO_TIPO,@ENDERECO))  OR @ENDERECO IS NULL)
		AND
		((@CIDADE IS NOT NULL AND FITCARD_ESTABELECIMENTO.CIDADE LIKE DBO.F_FITCARD_BUILD_LIKE(@CIDADE_TIPO,@CIDADE))  OR @CIDADE IS NULL)
		AND
		((@ESTADO IS NOT NULL AND FITCARD_ESTABELECIMENTO.ESTADO LIKE DBO.F_FITCARD_BUILD_LIKE(@ESTADO_TIPO,@ESTADO))  OR @ESTADO IS NULL)
		AND
		((@TELEFONE IS NOT NULL AND FITCARD_ESTABELECIMENTO.TELEFONE LIKE DBO.F_FITCARD_BUILD_LIKE(@TELEFONE_TIPO,@TELEFONE))  OR @TELEFONE IS NULL)
		AND
		-- Caso queira o select apenas por data (sem considerar hora)
		 (CAST(FLOOR(CAST(DATA_CADASTRADO AS FLOAT)) AS DATETIME) >= @DATA_CADASTRADO OR @DATA_CADASTRADO IS NULL)
		-- Caso queira o select por data e hora, descomente a linha abaixo
		-- (FITCARD_ESTABELECIMENTO.DATA_CADASTRADO = @DATA_CADASTRADO OR @DATA_CADASTRADO IS NULL)
		AND
		 (CAST(FLOOR(CAST(DATA_CADASTRADO AS FLOAT)) AS DATETIME) <= @DATA_CADASTRADO_ATE OR @DATA_CADASTRADO_ATE IS NULL)
		AND
		(FITCARD_ESTABELECIMENTO.ID_CATEGORIA = @ID_CATEGORIA OR @ID_CATEGORIA IS NULL OR (@ID_CATEGORIA=-1 AND FITCARD_ESTABELECIMENTO.ID_CATEGORIA is null))
		AND
		(FITCARD_ESTABELECIMENTO.ID_STATUS = @ID_STATUS OR @ID_STATUS IS NULL OR (@ID_STATUS=-1 AND FITCARD_ESTABELECIMENTO.ID_STATUS is null))
		AND
		((@AGENCIA IS NOT NULL AND FITCARD_ESTABELECIMENTO.AGENCIA LIKE DBO.F_FITCARD_BUILD_LIKE(@AGENCIA_TIPO,@AGENCIA))  OR @AGENCIA IS NULL)
		AND
		((@CONTA IS NOT NULL AND FITCARD_ESTABELECIMENTO.CONTA LIKE DBO.F_FITCARD_BUILD_LIKE(@CONTA_TIPO,@CONTA))  OR @CONTA IS NULL)
		)
	SELECT * FROM OrderedOrders WHERE
	RowNumber BETWEEN (@__SKIP + 1) AND (@__SKIP + @__TAKE)
	SET NOCOUNT OFF
END
GO


--SELECT_CAMPO COUNT--
IF EXISTS (SELECT 1 FROM SYSOBJECTS WHERE NAME ='P_SEL_CAMPO_COUNT_FITCARD_ESTABELECIMENTO')
	DROP PROC P_SEL_CAMPO_COUNT_FITCARD_ESTABELECIMENTO
GO
CREATE PROC P_SEL_CAMPO_COUNT_FITCARD_ESTABELECIMENTO
(
	@ID_ESTABELECIMENTO INT,	@RAZAO_SOCIAL_TIPO INT ,	@RAZAO_SOCIAL VARCHAR(255),	@NOME_FANTASIA_TIPO INT ,	@NOME_FANTASIA VARCHAR(255),	@CNPJ_TIPO INT ,	@CNPJ VARCHAR(30),	@EMAIL_TIPO INT ,	@EMAIL VARCHAR(50),	@ENDERECO_TIPO INT ,	@ENDERECO VARCHAR(255),	@CIDADE_TIPO INT ,	@CIDADE VARCHAR(50),	@ESTADO_TIPO INT ,	@ESTADO VARCHAR(50),	@TELEFONE_TIPO INT ,	@TELEFONE VARCHAR(20),	@DATA_CADASTRADO DATETIME,	@ID_CATEGORIA INT,	@ID_STATUS INT,	@AGENCIA_TIPO INT ,	@AGENCIA VARCHAR(10),	@CONTA_TIPO INT ,	@CONTA VARCHAR(5)
)
AS
BEGIN
	SET NOCOUNT ON
		SELECT COUNT(*) 

	FROM FITCARD_ESTABELECIMENTO (NOLOCK)
		WHERE
		(FITCARD_ESTABELECIMENTO.ID_ESTABELECIMENTO = @ID_ESTABELECIMENTO OR @ID_ESTABELECIMENTO IS NULL)
		AND
		((@RAZAO_SOCIAL IS NOT NULL AND FITCARD_ESTABELECIMENTO.RAZAO_SOCIAL LIKE DBO.F_FITCARD_BUILD_LIKE(@RAZAO_SOCIAL_TIPO,@RAZAO_SOCIAL))  OR @RAZAO_SOCIAL IS NULL)
		AND
		((@NOME_FANTASIA IS NOT NULL AND FITCARD_ESTABELECIMENTO.NOME_FANTASIA LIKE DBO.F_FITCARD_BUILD_LIKE(@NOME_FANTASIA_TIPO,@NOME_FANTASIA))  OR @NOME_FANTASIA IS NULL)
		AND
		((@CNPJ IS NOT NULL AND FITCARD_ESTABELECIMENTO.CNPJ LIKE DBO.F_FITCARD_BUILD_LIKE(@CNPJ_TIPO,@CNPJ))  OR @CNPJ IS NULL)
		AND
		((@EMAIL IS NOT NULL AND FITCARD_ESTABELECIMENTO.EMAIL LIKE DBO.F_FITCARD_BUILD_LIKE(@EMAIL_TIPO,@EMAIL))  OR @EMAIL IS NULL)
		AND
		((@ENDERECO IS NOT NULL AND FITCARD_ESTABELECIMENTO.ENDERECO LIKE DBO.F_FITCARD_BUILD_LIKE(@ENDERECO_TIPO,@ENDERECO))  OR @ENDERECO IS NULL)
		AND
		((@CIDADE IS NOT NULL AND FITCARD_ESTABELECIMENTO.CIDADE LIKE DBO.F_FITCARD_BUILD_LIKE(@CIDADE_TIPO,@CIDADE))  OR @CIDADE IS NULL)
		AND
		((@ESTADO IS NOT NULL AND FITCARD_ESTABELECIMENTO.ESTADO LIKE DBO.F_FITCARD_BUILD_LIKE(@ESTADO_TIPO,@ESTADO))  OR @ESTADO IS NULL)
		AND
		((@TELEFONE IS NOT NULL AND FITCARD_ESTABELECIMENTO.TELEFONE LIKE DBO.F_FITCARD_BUILD_LIKE(@TELEFONE_TIPO,@TELEFONE))  OR @TELEFONE IS NULL)
		AND
		-- Caso queira o select apenas por data (sem considerar hora)
		 (CAST(FLOOR(CAST(DATA_CADASTRADO AS FLOAT)) AS DATETIME) = @DATA_CADASTRADO OR @DATA_CADASTRADO IS NULL)
		-- Caso queira o select por data e hora, descomente a linha abaixo
		-- (FITCARD_ESTABELECIMENTO.DATA_CADASTRADO = @DATA_CADASTRADO OR @DATA_CADASTRADO IS NULL)
		AND
		(FITCARD_ESTABELECIMENTO.ID_CATEGORIA = @ID_CATEGORIA OR @ID_CATEGORIA IS NULL)
		AND
		(FITCARD_ESTABELECIMENTO.ID_STATUS = @ID_STATUS OR @ID_STATUS IS NULL)
		AND
		((@AGENCIA IS NOT NULL AND FITCARD_ESTABELECIMENTO.AGENCIA LIKE DBO.F_FITCARD_BUILD_LIKE(@AGENCIA_TIPO,@AGENCIA))  OR @AGENCIA IS NULL)
		AND
		((@CONTA IS NOT NULL AND FITCARD_ESTABELECIMENTO.CONTA LIKE DBO.F_FITCARD_BUILD_LIKE(@CONTA_TIPO,@CONTA))  OR @CONTA IS NULL)
	SET NOCOUNT OFF
END
GO


--INSERT--
IF EXISTS (SELECT 1 FROM SYSOBJECTS WHERE NAME ='P_INS_FITCARD_ESTABELECIMENTO')
	DROP PROC P_INS_FITCARD_ESTABELECIMENTO
GO
CREATE PROC P_INS_FITCARD_ESTABELECIMENTO
(
	@RAZAO_SOCIAL VARCHAR(255),
	@NOME_FANTASIA VARCHAR(255),
	@CNPJ VARCHAR(30),
	@EMAIL VARCHAR(50),
	@ENDERECO VARCHAR(255),
	@CIDADE VARCHAR(50),
	@ESTADO VARCHAR(50),
	@TELEFONE VARCHAR(20),
	@DATA_CADASTRADO DATETIME,
	@ID_CATEGORIA INT,
	@ID_STATUS INT,
	@AGENCIA VARCHAR(10),
	@CONTA VARCHAR(5)
)
AS
BEGIN
	SET NOCOUNT ON

	INSERT INTO FITCARD_ESTABELECIMENTO
	(
		RAZAO_SOCIAL,
		NOME_FANTASIA,
		CNPJ,
		EMAIL,
		ENDERECO,
		CIDADE,
		ESTADO,
		TELEFONE,
		DATA_CADASTRADO,
		ID_CATEGORIA,
		ID_STATUS,
		AGENCIA,
		CONTA
	)
	VALUES
	(
		@RAZAO_SOCIAL,
		@NOME_FANTASIA,
		@CNPJ,
		@EMAIL,
		@ENDERECO,
		@CIDADE,
		@ESTADO,
		@TELEFONE,
		@DATA_CADASTRADO,
		@ID_CATEGORIA,
		@ID_STATUS,
		@AGENCIA,
		@CONTA
	)
SELECT Convert(int,MAX(ID_ESTABELECIMENTO)) FROM FITCARD_ESTABELECIMENTO
	SET NOCOUNT OFF
END
GO


--UPDATE--
IF EXISTS (SELECT 1 FROM SYSOBJECTS WHERE NAME ='P_UPD_FITCARD_ESTABELECIMENTO')
	DROP PROC P_UPD_FITCARD_ESTABELECIMENTO
GO
CREATE PROC P_UPD_FITCARD_ESTABELECIMENTO
(
	@ID_ESTABELECIMENTO INT,
	@RAZAO_SOCIAL VARCHAR(255),
	@NOME_FANTASIA VARCHAR(255),
	@CNPJ VARCHAR(30),
	@EMAIL VARCHAR(50),
	@ENDERECO VARCHAR(255),
	@CIDADE VARCHAR(50),
	@ESTADO VARCHAR(50),
	@TELEFONE VARCHAR(20),
	@DATA_CADASTRADO DATETIME,
	@ID_CATEGORIA INT,
	@ID_STATUS INT,
	@AGENCIA VARCHAR(10),
	@CONTA VARCHAR(5)
)
AS
BEGIN
	SET NOCOUNT ON
	UPDATE FITCARD_ESTABELECIMENTO
	SET
		RAZAO_SOCIAL = @RAZAO_SOCIAL,
		NOME_FANTASIA = @NOME_FANTASIA,
		CNPJ = @CNPJ,
		EMAIL = @EMAIL,
		ENDERECO = @ENDERECO,
		CIDADE = @CIDADE,
		ESTADO = @ESTADO,
		TELEFONE = @TELEFONE,
		DATA_CADASTRADO = @DATA_CADASTRADO,
		ID_CATEGORIA = @ID_CATEGORIA,
		ID_STATUS = @ID_STATUS,
		AGENCIA = @AGENCIA,
		CONTA = @CONTA
	WHERE
		ID_ESTABELECIMENTO = @ID_ESTABELECIMENTO
	SET NOCOUNT OFF
END
GO


--DELETE--
IF EXISTS (SELECT 1 FROM SYSOBJECTS WHERE NAME ='P_DEL_FITCARD_ESTABELECIMENTO')
	DROP PROC P_DEL_FITCARD_ESTABELECIMENTO
GO
CREATE PROC P_DEL_FITCARD_ESTABELECIMENTO
(
	@ID_ESTABELECIMENTO INT
)
AS
BEGIN
	SET NOCOUNT ON
	DELETE FROM FITCARD_ESTABELECIMENTO
	WHERE
	ID_ESTABELECIMENTO = @ID_ESTABELECIMENTO
	SET NOCOUNT OFF
END
GO


--BUSCA--
IF EXISTS (SELECT 1 FROM SYSOBJECTS WHERE NAME ='P_BUSCA_FITCARD_ESTABELECIMENTO')
	DROP PROC P_BUSCA_FITCARD_ESTABELECIMENTO
GO
CREATE PROC P_BUSCA_FITCARD_ESTABELECIMENTO
(
	@__BUSCA VARCHAR(255),
	@__TIPO INT
)
AS
BEGIN
	DECLARE @START VARCHAR(1)
	DECLARE @END VARCHAR(1)
	SET @START = '%'
	SET @END = '%'

	IF @__TIPO = 0 
		BEGIN
			SET @START = ''
			SET @END = '%'
		END
	IF @__TIPO = 1 
		BEGIN
			SET @START = '%'
			SET @END = '%'
		END
	IF @__TIPO = 2
		BEGIN
			SET @START = '%'
			SET @END = ''
		END
	SET NOCOUNT ON
	SELECT *
	FROM FITCARD_ESTABELECIMENTO (NOLOCK)
	WHERE
	RAZAO_SOCIAL LIKE @START + @__BUSCA + @END OR
	NOME_FANTASIA LIKE @START + @__BUSCA + @END OR
	CNPJ LIKE @START + @__BUSCA + @END OR
	EMAIL LIKE @START + @__BUSCA + @END OR
	ENDERECO LIKE @START + @__BUSCA + @END OR
	CIDADE LIKE @START + @__BUSCA + @END OR
	ESTADO LIKE @START + @__BUSCA + @END OR
	TELEFONE LIKE @START + @__BUSCA + @END OR
	AGENCIA LIKE @START + @__BUSCA + @END OR
	CONTA LIKE @START + @__BUSCA + @END
	SET NOCOUNT OFF
END
GO


--COUNT--
IF EXISTS (SELECT 1 FROM SYSOBJECTS WHERE NAME ='P_COUNT_FITCARD_ESTABELECIMENTO')
	DROP PROC P_COUNT_FITCARD_ESTABELECIMENTO
GO
CREATE PROC P_COUNT_FITCARD_ESTABELECIMENTO
AS
BEGIN
	SET NOCOUNT ON
	SELECT
COUNT(*)
	FROM FITCARD_ESTABELECIMENTO (NOLOCK)
	SET NOCOUNT OFF
END
GO
--------------------------------------
-------PROXIMO ARQUIVO-------
--------------------------------------
--FITCARD_STATUS--
--------------------------------------

--CREATE--
IF NOT EXISTS (SELECT 1 FROM SYSOBJECTS WHERE NAME ='FITCARD_STATUS')
BEGIN
CREATE TABLE FITCARD_STATUS(
	ID_STATUS INT PRIMARY KEY IDENTITY(1,1),
	STATUS VARCHAR(10)
	
)
END


--SELECT--
IF EXISTS (SELECT 1 FROM SYSOBJECTS WHERE NAME ='P_SEL_FITCARD_STATUS')
	DROP PROC P_SEL_FITCARD_STATUS
GO
CREATE PROC P_SEL_FITCARD_STATUS
(
	@ID_STATUS INT
)
AS
BEGIN
	SET NOCOUNT ON
	SELECT
	FITCARD_STATUS.ID_STATUS,
	FITCARD_STATUS.STATUS
	FROM FITCARD_STATUS (NOLOCK)
	WHERE
	(FITCARD_STATUS.ID_STATUS = @ID_STATUS OR @ID_STATUS = 0)
	SET NOCOUNT OFF
END
GO


--SELECT_CAMPO--
IF EXISTS (SELECT 1 FROM SYSOBJECTS WHERE NAME ='P_SEL_CAMPO_FITCARD_STATUS')
	DROP PROC P_SEL_CAMPO_FITCARD_STATUS
GO
CREATE PROC P_SEL_CAMPO_FITCARD_STATUS
(
	@ID_STATUS INT,
	@STATUS_TIPO INT ,
	@STATUS VARCHAR(10),
	@__ORDEM INT,
	@__TIPO INT,
	@__SKIP INT,
	@__TAKE INT
)
AS
BEGIN
	SET NOCOUNT ON
	IF (@__TAKE = 0)
		SET @__TAKE = (SELECT COUNT(*) FROM FITCARD_STATUS)
	IF (@__TIPO = -1)
	BEGIN
		SET @__TIPO = 1
		SET @__ORDEM = -1
	END

	DECLARE @ORDERBY VARCHAR(255);
	SET @ORDERBY = CONVERT(VARCHAR,@__ORDEM);
	WITH OrderedOrders AS
		(
		SELECT 
			FITCARD_STATUS.ID_STATUS, 	FITCARD_STATUS.STATUS,  ROW_NUMBER() OVER		(
ORDER BY
Case @__TIPO
	WHEN 0 THEN
	CASE @ORDERBY
		WHEN '-1' THEN CONVERT(VARCHAR(255),NEWID())
		WHEN '0' THEN DBO.F_FITCARD_ZEROS(FITCARD_STATUS.ID_STATUS)
		WHEN '1' THEN FITCARD_STATUS.STATUS

	END
	END
	DESC,
	Case @__TIPO
	WHEN 1 THEN
	CASE @ORDERBY
			WHEN '-1' THEN CONVERT(VARCHAR(255),NEWID())
		WHEN '0' THEN DBO.F_FITCARD_ZEROS(FITCARD_STATUS.ID_STATUS)
		WHEN '1' THEN FITCARD_STATUS.STATUS

	END
END
ASC

		) AS 'RowNumber'

	FROM FITCARD_STATUS (NOLOCK)
		WHERE
		(FITCARD_STATUS.ID_STATUS = @ID_STATUS OR @ID_STATUS IS NULL OR (@ID_STATUS=-1 AND FITCARD_STATUS.ID_STATUS is null))
		AND
		((@STATUS IS NOT NULL AND FITCARD_STATUS.STATUS LIKE DBO.F_FITCARD_BUILD_LIKE(@STATUS_TIPO,@STATUS))  OR @STATUS IS NULL)
		)
	SELECT * FROM OrderedOrders WHERE
	RowNumber BETWEEN (@__SKIP + 1) AND (@__SKIP + @__TAKE)
	SET NOCOUNT OFF
END
GO


--SELECT_CAMPO_RANGE--
IF EXISTS (SELECT 1 FROM SYSOBJECTS WHERE NAME ='P_SEL_CAMPO_RELATORIO_RANGE_FITCARD_STATUS')
	DROP PROC P_SEL_CAMPO_RELATORIO_RANGE_FITCARD_STATUS
GO
CREATE PROC P_SEL_CAMPO_RELATORIO_RANGE_FITCARD_STATUS
(
	@ID_STATUS INT,
	@ID_STATUS_ATE INT,
	@STATUS_TIPO INT ,
	@STATUS VARCHAR(10),
	@__ORDEM INT,
	@__TIPO INT,
	@__SKIP INT,
	@__TAKE INT
)
AS
BEGIN
	SET NOCOUNT ON
	IF (@__TAKE = 0)
		SET @__TAKE = (SELECT COUNT(*) FROM FITCARD_STATUS)
	IF (@__TIPO = -1)
	BEGIN
		SET @__TIPO = 1
		SET @__ORDEM = -1
	END

	DECLARE @ORDERBY VARCHAR(255);
	SET @ORDERBY = CONVERT(VARCHAR,@__ORDEM);
	WITH OrderedOrders AS
		(
		SELECT 
			FITCARD_STATUS.ID_STATUS, 	FITCARD_STATUS.STATUS,  ROW_NUMBER() OVER		(
ORDER BY
Case @__TIPO
	WHEN 0 THEN
	CASE @ORDERBY
		WHEN '-1' THEN CONVERT(VARCHAR(255),NEWID())
		WHEN '0' THEN DBO.F_FITCARD_ZEROS(FITCARD_STATUS.ID_STATUS)
		WHEN '1' THEN FITCARD_STATUS.STATUS

	END
	END
	DESC,
	Case @__TIPO
	WHEN 1 THEN
	CASE @ORDERBY
			WHEN '-1' THEN CONVERT(VARCHAR(255),NEWID())
		WHEN '0' THEN DBO.F_FITCARD_ZEROS(FITCARD_STATUS.ID_STATUS)
		WHEN '1' THEN FITCARD_STATUS.STATUS

	END
END
ASC

		) AS 'RowNumber'

	FROM FITCARD_STATUS (NOLOCK)
		WHERE
		(FITCARD_STATUS.ID_STATUS >= @ID_STATUS OR @ID_STATUS IS NULL OR (@ID_STATUS=-1 AND FITCARD_STATUS.ID_STATUS is null))
		AND
		(FITCARD_STATUS.ID_STATUS <= @ID_STATUS_ATE OR @ID_STATUS_ATE IS NULL OR (@ID_STATUS_ATE=-1 AND FITCARD_STATUS.ID_STATUS is null))
		AND
		((@STATUS IS NOT NULL AND FITCARD_STATUS.STATUS LIKE DBO.F_FITCARD_BUILD_LIKE(@STATUS_TIPO,@STATUS))  OR @STATUS IS NULL)
		)
	SELECT * FROM OrderedOrders WHERE
	RowNumber BETWEEN (@__SKIP + 1) AND (@__SKIP + @__TAKE)
	SET NOCOUNT OFF
END
GO


--SELECT_CAMPO COUNT--
IF EXISTS (SELECT 1 FROM SYSOBJECTS WHERE NAME ='P_SEL_CAMPO_COUNT_FITCARD_STATUS')
	DROP PROC P_SEL_CAMPO_COUNT_FITCARD_STATUS
GO
CREATE PROC P_SEL_CAMPO_COUNT_FITCARD_STATUS
(
	@ID_STATUS INT,	@STATUS_TIPO INT ,	@STATUS VARCHAR(10)
)
AS
BEGIN
	SET NOCOUNT ON
		SELECT COUNT(*) 

	FROM FITCARD_STATUS (NOLOCK)
		WHERE
		(FITCARD_STATUS.ID_STATUS = @ID_STATUS OR @ID_STATUS IS NULL)
		AND
		((@STATUS IS NOT NULL AND FITCARD_STATUS.STATUS LIKE DBO.F_FITCARD_BUILD_LIKE(@STATUS_TIPO,@STATUS))  OR @STATUS IS NULL)
	SET NOCOUNT OFF
END
GO


--INSERT--
IF EXISTS (SELECT 1 FROM SYSOBJECTS WHERE NAME ='P_INS_FITCARD_STATUS')
	DROP PROC P_INS_FITCARD_STATUS
GO
CREATE PROC P_INS_FITCARD_STATUS
(
	@STATUS VARCHAR(10)
)
AS
BEGIN
	SET NOCOUNT ON

	INSERT INTO FITCARD_STATUS
	(
		STATUS
	)
	VALUES
	(
		@STATUS
	)
SELECT Convert(int,MAX(ID_STATUS)) FROM FITCARD_STATUS
	SET NOCOUNT OFF
END
GO


--UPDATE--
IF EXISTS (SELECT 1 FROM SYSOBJECTS WHERE NAME ='P_UPD_FITCARD_STATUS')
	DROP PROC P_UPD_FITCARD_STATUS
GO
CREATE PROC P_UPD_FITCARD_STATUS
(
	@ID_STATUS INT,
	@STATUS VARCHAR(10)
)
AS
BEGIN
	SET NOCOUNT ON
	UPDATE FITCARD_STATUS
	SET
		STATUS = @STATUS
	WHERE
		ID_STATUS = @ID_STATUS
	SET NOCOUNT OFF
END
GO


--DELETE--
IF EXISTS (SELECT 1 FROM SYSOBJECTS WHERE NAME ='P_DEL_FITCARD_STATUS')
	DROP PROC P_DEL_FITCARD_STATUS
GO
CREATE PROC P_DEL_FITCARD_STATUS
(
	@ID_STATUS INT
)
AS
BEGIN
	SET NOCOUNT ON
	DELETE FROM FITCARD_STATUS
	WHERE
	ID_STATUS = @ID_STATUS
	SET NOCOUNT OFF
END
GO


--BUSCA--
IF EXISTS (SELECT 1 FROM SYSOBJECTS WHERE NAME ='P_BUSCA_FITCARD_STATUS')
	DROP PROC P_BUSCA_FITCARD_STATUS
GO
CREATE PROC P_BUSCA_FITCARD_STATUS
(
	@__BUSCA VARCHAR(255),
	@__TIPO INT
)
AS
BEGIN
	DECLARE @START VARCHAR(1)
	DECLARE @END VARCHAR(1)
	SET @START = '%'
	SET @END = '%'

	IF @__TIPO = 0 
		BEGIN
			SET @START = ''
			SET @END = '%'
		END
	IF @__TIPO = 1 
		BEGIN
			SET @START = '%'
			SET @END = '%'
		END
	IF @__TIPO = 2
		BEGIN
			SET @START = '%'
			SET @END = ''
		END
	SET NOCOUNT ON
	SELECT *
	FROM FITCARD_STATUS (NOLOCK)
	WHERE
	STATUS LIKE @START + @__BUSCA + @END
	SET NOCOUNT OFF
END
GO


--COUNT--
IF EXISTS (SELECT 1 FROM SYSOBJECTS WHERE NAME ='P_COUNT_FITCARD_STATUS')
	DROP PROC P_COUNT_FITCARD_STATUS
GO
CREATE PROC P_COUNT_FITCARD_STATUS
AS
BEGIN
	SET NOCOUNT ON
	SELECT
COUNT(*)
	FROM FITCARD_STATUS (NOLOCK)
	SET NOCOUNT OFF
END
GO
--------------------------------------
-------PROXIMO ARQUIVO-------


--FUNCTIONS--
IF EXISTS (SELECT 1 FROM SYSOBJECTS WHERE NAME ='F_FITCARD_BUILD_LIKE')
	DROP FUNCTION F_FITCARD_BUILD_LIKE
GO
CREATE FUNCTION [dbo].[F_FITCARD_BUILD_LIKE](@TIPO_BUSCA INT, @VARIAVEL VARCHAR(8000)) RETURNS VARCHAR(8000)
AS
BEGIN
	DECLARE @STR_LIKE VARCHAR(255)
	DECLARE @LIKESTART VARCHAR(1)
	DECLARE @LIKEEND VARCHAR(1)
	SET @LIKESTART = '%'
	SET @LIKEEND = '%'

	IF @TIPO_BUSCA = 0 
	BEGIN
		SET @LIKESTART = ''
		SET @LIKEEND = '%'
	END
	IF @TIPO_BUSCA = 1 OR @TIPO_BUSCA IS NULL
	BEGIN
		SET @LIKESTART = '%'
		SET @LIKEEND = '%'
	END
	IF @TIPO_BUSCA = 2
	BEGIN
		SET @LIKESTART = '%'
		SET @LIKEEND = ''
	END
	IF @TIPO_BUSCA = 3
	BEGIN
		SET @LIKESTART = ''
		SET @LIKEEND = ''
	END
	SET @STR_LIKE = @LIKESTART + @VARIAVEL + @LIKEEND
	RETURN @STR_LIKE
END
GO

IF EXISTS (SELECT 1 FROM SYSOBJECTS WHERE NAME ='F_FITCARD_ZEROS')
	DROP FUNCTION F_FITCARD_ZEROS
GO

            CREATE FUNCTION F_FITCARD_ZEROS(@N INT) RETURNS VARCHAR(10)
            AS
            BEGIN
                DECLARE @DIGITS VARCHAR(10)
                DECLARE @START_LENGTH INT
                DECLARE @RESULTANT_STRING VARCHAR(10)
                DECLARE @N_TOSTRING VARCHAR(10)
                SET @DIGITS = '0000000000'
                SET @N_TOSTRING = CONVERT(VARCHAR(10),@N)
                SET @START_LENGTH = LEN(@N_TOSTRING)
                SET @RESULTANT_STRING = SUBSTRING(@DIGITS,0,LEN(@DIGITS)-@START_LENGTH+1) + @N_TOSTRING

                RETURN @RESULTANT_STRING
            END
